// Generated by view binder compiler. Do not edit!
package com.tnmeta.torymeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.pnikosis.materialishprogress.ProgressWheel;
import com.tnmeta.torymeta.R;
import com.tnmeta.torymeta.control.ToryLoungeButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSeminarMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton actionCreate;

  @NonNull
  public final FloatingActionButton actionUpMove;

  @NonNull
  public final AppCompatImageView calendarBtn;

  @NonNull
  public final AppCompatEditText editBox;

  @NonNull
  public final AppCompatImageView editBoxDeleteBtn;

  @NonNull
  public final AppCompatTextView emptyView;

  @NonNull
  public final AppCompatTextView filterAll;

  @NonNull
  public final ConstraintLayout filterAllLayout;

  @NonNull
  public final AppCompatTextView filterBefore;

  @NonNull
  public final ConstraintLayout filterBeforeLayout;

  @NonNull
  public final AppCompatTextView filterEnd;

  @NonNull
  public final ConstraintLayout filterEndLayout;

  @NonNull
  public final AppCompatTextView filterStart;

  @NonNull
  public final ConstraintLayout filterStartLayout;

  @NonNull
  public final AppCompatImageButton ivBack;

  @NonNull
  public final CoordinatorLayout layoutCoordinator;

  @NonNull
  public final ProgressWheel loadingProgress;

  @NonNull
  public final NestedScrollView mainScrollview;

  @NonNull
  public final ConstraintLayout mainSeminarLayout;

  @NonNull
  public final AppCompatTextView mySeminar;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final ConstraintLayout searchEditLayout;

  @NonNull
  public final RecyclerView seminarListView;

  @NonNull
  public final HorizontalScrollView sortScrollviewLayout;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final ConstraintLayout topLayout;

  @NonNull
  public final ToryLoungeButton toryLounge;

  private FragmentSeminarMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton actionCreate, @NonNull FloatingActionButton actionUpMove,
      @NonNull AppCompatImageView calendarBtn, @NonNull AppCompatEditText editBox,
      @NonNull AppCompatImageView editBoxDeleteBtn, @NonNull AppCompatTextView emptyView,
      @NonNull AppCompatTextView filterAll, @NonNull ConstraintLayout filterAllLayout,
      @NonNull AppCompatTextView filterBefore, @NonNull ConstraintLayout filterBeforeLayout,
      @NonNull AppCompatTextView filterEnd, @NonNull ConstraintLayout filterEndLayout,
      @NonNull AppCompatTextView filterStart, @NonNull ConstraintLayout filterStartLayout,
      @NonNull AppCompatImageButton ivBack, @NonNull CoordinatorLayout layoutCoordinator,
      @NonNull ProgressWheel loadingProgress, @NonNull NestedScrollView mainScrollview,
      @NonNull ConstraintLayout mainSeminarLayout, @NonNull AppCompatTextView mySeminar,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull ConstraintLayout searchEditLayout,
      @NonNull RecyclerView seminarListView, @NonNull HorizontalScrollView sortScrollviewLayout,
      @NonNull AppCompatTextView title, @NonNull ConstraintLayout topLayout,
      @NonNull ToryLoungeButton toryLounge) {
    this.rootView = rootView;
    this.actionCreate = actionCreate;
    this.actionUpMove = actionUpMove;
    this.calendarBtn = calendarBtn;
    this.editBox = editBox;
    this.editBoxDeleteBtn = editBoxDeleteBtn;
    this.emptyView = emptyView;
    this.filterAll = filterAll;
    this.filterAllLayout = filterAllLayout;
    this.filterBefore = filterBefore;
    this.filterBeforeLayout = filterBeforeLayout;
    this.filterEnd = filterEnd;
    this.filterEndLayout = filterEndLayout;
    this.filterStart = filterStart;
    this.filterStartLayout = filterStartLayout;
    this.ivBack = ivBack;
    this.layoutCoordinator = layoutCoordinator;
    this.loadingProgress = loadingProgress;
    this.mainScrollview = mainScrollview;
    this.mainSeminarLayout = mainSeminarLayout;
    this.mySeminar = mySeminar;
    this.refreshLayout = refreshLayout;
    this.searchEditLayout = searchEditLayout;
    this.seminarListView = seminarListView;
    this.sortScrollviewLayout = sortScrollviewLayout;
    this.title = title;
    this.topLayout = topLayout;
    this.toryLounge = toryLounge;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSeminarMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSeminarMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_seminar_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSeminarMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionCreate;
      FloatingActionButton actionCreate = ViewBindings.findChildViewById(rootView, id);
      if (actionCreate == null) {
        break missingId;
      }

      id = R.id.actionUpMove;
      FloatingActionButton actionUpMove = ViewBindings.findChildViewById(rootView, id);
      if (actionUpMove == null) {
        break missingId;
      }

      id = R.id.calendarBtn;
      AppCompatImageView calendarBtn = ViewBindings.findChildViewById(rootView, id);
      if (calendarBtn == null) {
        break missingId;
      }

      id = R.id.editBox;
      AppCompatEditText editBox = ViewBindings.findChildViewById(rootView, id);
      if (editBox == null) {
        break missingId;
      }

      id = R.id.editBoxDeleteBtn;
      AppCompatImageView editBoxDeleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBoxDeleteBtn == null) {
        break missingId;
      }

      id = R.id.emptyView;
      AppCompatTextView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.filter_all;
      AppCompatTextView filterAll = ViewBindings.findChildViewById(rootView, id);
      if (filterAll == null) {
        break missingId;
      }

      id = R.id.filter_all_layout;
      ConstraintLayout filterAllLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterAllLayout == null) {
        break missingId;
      }

      id = R.id.filter_before;
      AppCompatTextView filterBefore = ViewBindings.findChildViewById(rootView, id);
      if (filterBefore == null) {
        break missingId;
      }

      id = R.id.filter_before_layout;
      ConstraintLayout filterBeforeLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterBeforeLayout == null) {
        break missingId;
      }

      id = R.id.filter_end;
      AppCompatTextView filterEnd = ViewBindings.findChildViewById(rootView, id);
      if (filterEnd == null) {
        break missingId;
      }

      id = R.id.filter_end_layout;
      ConstraintLayout filterEndLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterEndLayout == null) {
        break missingId;
      }

      id = R.id.filter_start;
      AppCompatTextView filterStart = ViewBindings.findChildViewById(rootView, id);
      if (filterStart == null) {
        break missingId;
      }

      id = R.id.filter_start_layout;
      ConstraintLayout filterStartLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterStartLayout == null) {
        break missingId;
      }

      id = R.id.ivBack;
      AppCompatImageButton ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.layout_coordinator;
      CoordinatorLayout layoutCoordinator = ViewBindings.findChildViewById(rootView, id);
      if (layoutCoordinator == null) {
        break missingId;
      }

      id = R.id.loadingProgress;
      ProgressWheel loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.main_scrollview;
      NestedScrollView mainScrollview = ViewBindings.findChildViewById(rootView, id);
      if (mainScrollview == null) {
        break missingId;
      }

      id = R.id.main_seminar_layout;
      ConstraintLayout mainSeminarLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainSeminarLayout == null) {
        break missingId;
      }

      id = R.id.my_seminar;
      AppCompatTextView mySeminar = ViewBindings.findChildViewById(rootView, id);
      if (mySeminar == null) {
        break missingId;
      }

      id = R.id.refresh_layout;
      SwipeRefreshLayout refreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayout == null) {
        break missingId;
      }

      id = R.id.search_edit_layout;
      ConstraintLayout searchEditLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchEditLayout == null) {
        break missingId;
      }

      id = R.id.seminarListView;
      RecyclerView seminarListView = ViewBindings.findChildViewById(rootView, id);
      if (seminarListView == null) {
        break missingId;
      }

      id = R.id.sort_scrollview_layout;
      HorizontalScrollView sortScrollviewLayout = ViewBindings.findChildViewById(rootView, id);
      if (sortScrollviewLayout == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.topLayout;
      ConstraintLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      id = R.id.tory_lounge;
      ToryLoungeButton toryLounge = ViewBindings.findChildViewById(rootView, id);
      if (toryLounge == null) {
        break missingId;
      }

      return new FragmentSeminarMainBinding((ConstraintLayout) rootView, actionCreate, actionUpMove,
          calendarBtn, editBox, editBoxDeleteBtn, emptyView, filterAll, filterAllLayout,
          filterBefore, filterBeforeLayout, filterEnd, filterEndLayout, filterStart,
          filterStartLayout, ivBack, layoutCoordinator, loadingProgress, mainScrollview,
          mainSeminarLayout, mySeminar, refreshLayout, searchEditLayout, seminarListView,
          sortScrollviewLayout, title, topLayout, toryLounge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
