// Generated by view binder compiler. Do not edit!
package com.tnmeta.torymeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.tnmeta.torymeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSeminarSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton actionUpMove;

  @NonNull
  public final AppCompatImageView close;

  @NonNull
  public final AppCompatImageView editBoxDeleteBtn;

  @NonNull
  public final AppCompatEditText editSearch;

  @NonNull
  public final AppCompatTextView emptyView;

  @NonNull
  public final RecyclerView resultRecycle;

  @NonNull
  public final ConstraintLayout searchEditLayout;

  @NonNull
  public final AppCompatTextView searchResult;

  @NonNull
  public final ConstraintLayout searchResultLayout;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final ConstraintLayout topLayout;

  private FragmentSeminarSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton actionUpMove, @NonNull AppCompatImageView close,
      @NonNull AppCompatImageView editBoxDeleteBtn, @NonNull AppCompatEditText editSearch,
      @NonNull AppCompatTextView emptyView, @NonNull RecyclerView resultRecycle,
      @NonNull ConstraintLayout searchEditLayout, @NonNull AppCompatTextView searchResult,
      @NonNull ConstraintLayout searchResultLayout, @NonNull AppCompatTextView title,
      @NonNull ConstraintLayout topLayout) {
    this.rootView = rootView;
    this.actionUpMove = actionUpMove;
    this.close = close;
    this.editBoxDeleteBtn = editBoxDeleteBtn;
    this.editSearch = editSearch;
    this.emptyView = emptyView;
    this.resultRecycle = resultRecycle;
    this.searchEditLayout = searchEditLayout;
    this.searchResult = searchResult;
    this.searchResultLayout = searchResultLayout;
    this.title = title;
    this.topLayout = topLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSeminarSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSeminarSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_seminar_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSeminarSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionUpMove;
      FloatingActionButton actionUpMove = ViewBindings.findChildViewById(rootView, id);
      if (actionUpMove == null) {
        break missingId;
      }

      id = R.id.close;
      AppCompatImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.editBoxDeleteBtn;
      AppCompatImageView editBoxDeleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (editBoxDeleteBtn == null) {
        break missingId;
      }

      id = R.id.editSearch;
      AppCompatEditText editSearch = ViewBindings.findChildViewById(rootView, id);
      if (editSearch == null) {
        break missingId;
      }

      id = R.id.emptyView;
      AppCompatTextView emptyView = ViewBindings.findChildViewById(rootView, id);
      if (emptyView == null) {
        break missingId;
      }

      id = R.id.resultRecycle;
      RecyclerView resultRecycle = ViewBindings.findChildViewById(rootView, id);
      if (resultRecycle == null) {
        break missingId;
      }

      id = R.id.search_edit_layout;
      ConstraintLayout searchEditLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchEditLayout == null) {
        break missingId;
      }

      id = R.id.search_result;
      AppCompatTextView searchResult = ViewBindings.findChildViewById(rootView, id);
      if (searchResult == null) {
        break missingId;
      }

      id = R.id.search_result_layout;
      ConstraintLayout searchResultLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchResultLayout == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.topLayout;
      ConstraintLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      return new FragmentSeminarSearchBinding((ConstraintLayout) rootView, actionUpMove, close,
          editBoxDeleteBtn, editSearch, emptyView, resultRecycle, searchEditLayout, searchResult,
          searchResultLayout, title, topLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
