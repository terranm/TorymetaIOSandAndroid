// Generated by view binder compiler. Do not edit!
package com.tnmeta.torymeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tnmeta.torymeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityParticipantsListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageButton close;

  @NonNull
  public final RecyclerView participantsRecyclerView;

  @NonNull
  public final AppCompatImageButton report;

  @NonNull
  public final Guideline titleGuidelin;

  @NonNull
  public final ConstraintLayout titleLayout;

  @NonNull
  public final AppCompatTextView txtCount;

  @NonNull
  public final AppCompatTextView txtTitle;

  private ActivityParticipantsListBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageButton close, @NonNull RecyclerView participantsRecyclerView,
      @NonNull AppCompatImageButton report, @NonNull Guideline titleGuidelin,
      @NonNull ConstraintLayout titleLayout, @NonNull AppCompatTextView txtCount,
      @NonNull AppCompatTextView txtTitle) {
    this.rootView = rootView;
    this.close = close;
    this.participantsRecyclerView = participantsRecyclerView;
    this.report = report;
    this.titleGuidelin = titleGuidelin;
    this.titleLayout = titleLayout;
    this.txtCount = txtCount;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityParticipantsListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityParticipantsListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_participants_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityParticipantsListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      AppCompatImageButton close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.participants_recyclerView;
      RecyclerView participantsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (participantsRecyclerView == null) {
        break missingId;
      }

      id = R.id.report;
      AppCompatImageButton report = ViewBindings.findChildViewById(rootView, id);
      if (report == null) {
        break missingId;
      }

      id = R.id.title_guidelin;
      Guideline titleGuidelin = ViewBindings.findChildViewById(rootView, id);
      if (titleGuidelin == null) {
        break missingId;
      }

      id = R.id.title_layout;
      ConstraintLayout titleLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleLayout == null) {
        break missingId;
      }

      id = R.id.txt_count;
      AppCompatTextView txtCount = ViewBindings.findChildViewById(rootView, id);
      if (txtCount == null) {
        break missingId;
      }

      id = R.id.txt_title;
      AppCompatTextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new ActivityParticipantsListBinding((ConstraintLayout) rootView, close,
          participantsRecyclerView, report, titleGuidelin, titleLayout, txtCount, txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
