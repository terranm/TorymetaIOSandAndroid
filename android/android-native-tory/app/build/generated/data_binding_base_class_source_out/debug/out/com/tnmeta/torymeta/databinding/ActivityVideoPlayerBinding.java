// Generated by view binder compiler. Do not edit!
package com.tnmeta.torymeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.media3.ui.PlayerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.pnikosis.materialishprogress.ProgressWheel;
import com.tnmeta.torymeta.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVideoPlayerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView brightnessIcon;

  @NonNull
  public final LinearLayout brightnessVolumeContainer;

  @NonNull
  public final AppCompatTextView brightnessVolumeTv;

  @NonNull
  public final ProgressBar bufferProgressbar;

  @NonNull
  public final View divideLine;

  @NonNull
  public final AppCompatButton doubleTabSkipForwardIcon;

  @NonNull
  public final AppCompatButton doubleTapSkipBackwardIcon;

  @NonNull
  public final AppCompatImageButton ivBack;

  @NonNull
  public final AppCompatTextView lectureTitle;

  @NonNull
  public final ProgressWheel loadingProgress;

  @NonNull
  public final AppCompatTextView playerError01;

  @NonNull
  public final AppCompatTextView playerError02;

  @NonNull
  public final PlayerView playerView;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final ConstraintLayout titleLayout;

  @NonNull
  public final ConstraintLayout video;

  @NonNull
  public final ConstraintLayout videoLayout;

  @NonNull
  public final ConstraintLayout videoNoticeLayout;

  @NonNull
  public final ConstraintLayout videoRootView;

  @NonNull
  public final AppCompatImageView volumeIcon;

  private ActivityVideoPlayerBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView brightnessIcon, @NonNull LinearLayout brightnessVolumeContainer,
      @NonNull AppCompatTextView brightnessVolumeTv, @NonNull ProgressBar bufferProgressbar,
      @NonNull View divideLine, @NonNull AppCompatButton doubleTabSkipForwardIcon,
      @NonNull AppCompatButton doubleTapSkipBackwardIcon, @NonNull AppCompatImageButton ivBack,
      @NonNull AppCompatTextView lectureTitle, @NonNull ProgressWheel loadingProgress,
      @NonNull AppCompatTextView playerError01, @NonNull AppCompatTextView playerError02,
      @NonNull PlayerView playerView, @NonNull RecyclerView recyclerView,
      @NonNull SwipeRefreshLayout refreshLayout, @NonNull AppCompatTextView title,
      @NonNull ConstraintLayout titleLayout, @NonNull ConstraintLayout video,
      @NonNull ConstraintLayout videoLayout, @NonNull ConstraintLayout videoNoticeLayout,
      @NonNull ConstraintLayout videoRootView, @NonNull AppCompatImageView volumeIcon) {
    this.rootView = rootView;
    this.brightnessIcon = brightnessIcon;
    this.brightnessVolumeContainer = brightnessVolumeContainer;
    this.brightnessVolumeTv = brightnessVolumeTv;
    this.bufferProgressbar = bufferProgressbar;
    this.divideLine = divideLine;
    this.doubleTabSkipForwardIcon = doubleTabSkipForwardIcon;
    this.doubleTapSkipBackwardIcon = doubleTapSkipBackwardIcon;
    this.ivBack = ivBack;
    this.lectureTitle = lectureTitle;
    this.loadingProgress = loadingProgress;
    this.playerError01 = playerError01;
    this.playerError02 = playerError02;
    this.playerView = playerView;
    this.recyclerView = recyclerView;
    this.refreshLayout = refreshLayout;
    this.title = title;
    this.titleLayout = titleLayout;
    this.video = video;
    this.videoLayout = videoLayout;
    this.videoNoticeLayout = videoNoticeLayout;
    this.videoRootView = videoRootView;
    this.volumeIcon = volumeIcon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVideoPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_video_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVideoPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brightness_icon;
      AppCompatImageView brightnessIcon = ViewBindings.findChildViewById(rootView, id);
      if (brightnessIcon == null) {
        break missingId;
      }

      id = R.id.brightness_volume_container;
      LinearLayout brightnessVolumeContainer = ViewBindings.findChildViewById(rootView, id);
      if (brightnessVolumeContainer == null) {
        break missingId;
      }

      id = R.id.brightness_volume_tv;
      AppCompatTextView brightnessVolumeTv = ViewBindings.findChildViewById(rootView, id);
      if (brightnessVolumeTv == null) {
        break missingId;
      }

      id = R.id.buffer_progressbar;
      ProgressBar bufferProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (bufferProgressbar == null) {
        break missingId;
      }

      id = R.id.divide_line;
      View divideLine = ViewBindings.findChildViewById(rootView, id);
      if (divideLine == null) {
        break missingId;
      }

      id = R.id.double_tab_skip_forward_icon;
      AppCompatButton doubleTabSkipForwardIcon = ViewBindings.findChildViewById(rootView, id);
      if (doubleTabSkipForwardIcon == null) {
        break missingId;
      }

      id = R.id.double_tap_skip_backward_icon;
      AppCompatButton doubleTapSkipBackwardIcon = ViewBindings.findChildViewById(rootView, id);
      if (doubleTapSkipBackwardIcon == null) {
        break missingId;
      }

      id = R.id.ivBack;
      AppCompatImageButton ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.lecture_title;
      AppCompatTextView lectureTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureTitle == null) {
        break missingId;
      }

      id = R.id.loadingProgress;
      ProgressWheel loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.player_error_01;
      AppCompatTextView playerError01 = ViewBindings.findChildViewById(rootView, id);
      if (playerError01 == null) {
        break missingId;
      }

      id = R.id.player_error_02;
      AppCompatTextView playerError02 = ViewBindings.findChildViewById(rootView, id);
      if (playerError02 == null) {
        break missingId;
      }

      id = R.id.playerView;
      PlayerView playerView = ViewBindings.findChildViewById(rootView, id);
      if (playerView == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.refresh_layout;
      SwipeRefreshLayout refreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayout == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title_layout;
      ConstraintLayout titleLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleLayout == null) {
        break missingId;
      }

      id = R.id.video;
      ConstraintLayout video = ViewBindings.findChildViewById(rootView, id);
      if (video == null) {
        break missingId;
      }

      id = R.id.video_layout;
      ConstraintLayout videoLayout = ViewBindings.findChildViewById(rootView, id);
      if (videoLayout == null) {
        break missingId;
      }

      id = R.id.video_notice_layout;
      ConstraintLayout videoNoticeLayout = ViewBindings.findChildViewById(rootView, id);
      if (videoNoticeLayout == null) {
        break missingId;
      }

      ConstraintLayout videoRootView = (ConstraintLayout) rootView;

      id = R.id.volume_icon;
      AppCompatImageView volumeIcon = ViewBindings.findChildViewById(rootView, id);
      if (volumeIcon == null) {
        break missingId;
      }

      return new ActivityVideoPlayerBinding((ConstraintLayout) rootView, brightnessIcon,
          brightnessVolumeContainer, brightnessVolumeTv, bufferProgressbar, divideLine,
          doubleTabSkipForwardIcon, doubleTapSkipBackwardIcon, ivBack, lectureTitle,
          loadingProgress, playerError01, playerError02, playerView, recyclerView, refreshLayout,
          title, titleLayout, video, videoLayout, videoNoticeLayout, videoRootView, volumeIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
