// Generated by view binder compiler. Do not edit!
package com.tnmeta.torymeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tnmeta.torymeta.R;
import com.tnmeta.torymeta.ui.NestedScrollableHost;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.relex.circleindicator.CircleIndicator2;

public final class ActivityCreateSeminarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageButton close;

  @NonNull
  public final ConstraintLayout dateLayout;

  @NonNull
  public final View divide01;

  @NonNull
  public final View divide02;

  @NonNull
  public final View divide03;

  @NonNull
  public final View divide10;

  @NonNull
  public final View divide11;

  @NonNull
  public final AppCompatEditText editSeminarExplanation;

  @NonNull
  public final AppCompatTextView editSeminarTeacher;

  @NonNull
  public final AppCompatEditText editSeminarTitle;

  @NonNull
  public final AppCompatTextView endDate;

  @NonNull
  public final ConstraintLayout endLayout;

  @NonNull
  public final AppCompatTextView endTime;

  @NonNull
  public final ConstraintLayout endTimeLayout;

  @NonNull
  public final CircleIndicator2 indicator;

  @NonNull
  public final AppCompatTextView largeRoom;

  @NonNull
  public final AppCompatTextView largeRoomCount;

  @NonNull
  public final CoordinatorLayout layoutCoordinator;

  @NonNull
  public final NestedScrollableHost listLayout;

  @NonNull
  public final AppCompatTextView middleCount;

  @NonNull
  public final AppCompatTextView middleRoom;

  @NonNull
  public final Switch openSwitch;

  @NonNull
  public final ConstraintLayout roomLayout;

  @NonNull
  public final RecyclerView roomListView;

  @NonNull
  public final ConstraintLayout roomSelectLayout;

  @NonNull
  public final AppCompatTextView seminarCapacityCount;

  @NonNull
  public final ConstraintLayout seminarCapacityLayout;

  @NonNull
  public final ConstraintLayout seminarCountLayout;

  @NonNull
  public final ConstraintLayout seminarCreate;

  @NonNull
  public final AppCompatTextView seminarCreateInfoMessage01;

  @NonNull
  public final AppCompatTextView seminarCreateInfoMessage02;

  @NonNull
  public final ConstraintLayout seminarDateLayout;

  @NonNull
  public final ConstraintLayout seminarExplanationLayout;

  @NonNull
  public final AppCompatImageView seminarMinus;

  @NonNull
  public final ConstraintLayout seminarOpenLayout;

  @NonNull
  public final AppCompatImageView seminarPlus;

  @NonNull
  public final AppCompatImageView seminarPlus01;

  @NonNull
  public final AppCompatImageView seminarPlus02;

  @NonNull
  public final AppCompatTextView seminarRoomCount;

  @NonNull
  public final ConstraintLayout seminarRoomCountLayout;

  @NonNull
  public final ConstraintLayout seminarTeacherLayout;

  @NonNull
  public final ConstraintLayout seminarTitleLayout;

  @NonNull
  public final AppCompatTextView seminarTotalCount;

  @NonNull
  public final AppCompatEditText seminarUrl;

  @NonNull
  public final ConstraintLayout seminiarRoomLayout;

  @NonNull
  public final AppCompatTextView smallCount;

  @NonNull
  public final AppCompatTextView smallRoom;

  @NonNull
  public final AppCompatTextView startDate;

  @NonNull
  public final ConstraintLayout startDateLayout;

  @NonNull
  public final ConstraintLayout startLayout;

  @NonNull
  public final AppCompatTextView startTime;

  @NonNull
  public final ConstraintLayout startTimeLayout;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final ConstraintLayout tooltip;

  @NonNull
  public final ConstraintLayout topLayout;

  @NonNull
  public final AppCompatTextView totalRoom;

  @NonNull
  public final AppCompatTextView txtDateTitle;

  @NonNull
  public final AppCompatTextView txtDayComment;

  @NonNull
  public final AppCompatTextView txtEndDate;

  @NonNull
  public final AppCompatTextView txtExplanationTitle;

  @NonNull
  public final AppCompatTextView txtOpenTitle;

  @NonNull
  public final AppCompatTextView txtRoomInfo;

  @NonNull
  public final AppCompatTextView txtRoomTitle;

  @NonNull
  public final AppCompatTextView txtSeminarExplanationError;

  @NonNull
  public final AppCompatTextView txtSeminarTitle;

  @NonNull
  public final AppCompatTextView txtSeminarTitleError;

  @NonNull
  public final AppCompatTextView txtStartDate;

  @NonNull
  public final AppCompatTextView txtTeacherTitle;

  @NonNull
  public final AppCompatTextView txtUrlTitle;

  @NonNull
  public final ConstraintLayout urlLayout;

  @NonNull
  public final View viewDateSeparate;

  @NonNull
  public final View viewDateSeparate01;

  @NonNull
  public final View viewDateSeparate02;

  private ActivityCreateSeminarBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageButton close, @NonNull ConstraintLayout dateLayout,
      @NonNull View divide01, @NonNull View divide02, @NonNull View divide03,
      @NonNull View divide10, @NonNull View divide11,
      @NonNull AppCompatEditText editSeminarExplanation,
      @NonNull AppCompatTextView editSeminarTeacher, @NonNull AppCompatEditText editSeminarTitle,
      @NonNull AppCompatTextView endDate, @NonNull ConstraintLayout endLayout,
      @NonNull AppCompatTextView endTime, @NonNull ConstraintLayout endTimeLayout,
      @NonNull CircleIndicator2 indicator, @NonNull AppCompatTextView largeRoom,
      @NonNull AppCompatTextView largeRoomCount, @NonNull CoordinatorLayout layoutCoordinator,
      @NonNull NestedScrollableHost listLayout, @NonNull AppCompatTextView middleCount,
      @NonNull AppCompatTextView middleRoom, @NonNull Switch openSwitch,
      @NonNull ConstraintLayout roomLayout, @NonNull RecyclerView roomListView,
      @NonNull ConstraintLayout roomSelectLayout, @NonNull AppCompatTextView seminarCapacityCount,
      @NonNull ConstraintLayout seminarCapacityLayout, @NonNull ConstraintLayout seminarCountLayout,
      @NonNull ConstraintLayout seminarCreate,
      @NonNull AppCompatTextView seminarCreateInfoMessage01,
      @NonNull AppCompatTextView seminarCreateInfoMessage02,
      @NonNull ConstraintLayout seminarDateLayout,
      @NonNull ConstraintLayout seminarExplanationLayout, @NonNull AppCompatImageView seminarMinus,
      @NonNull ConstraintLayout seminarOpenLayout, @NonNull AppCompatImageView seminarPlus,
      @NonNull AppCompatImageView seminarPlus01, @NonNull AppCompatImageView seminarPlus02,
      @NonNull AppCompatTextView seminarRoomCount, @NonNull ConstraintLayout seminarRoomCountLayout,
      @NonNull ConstraintLayout seminarTeacherLayout, @NonNull ConstraintLayout seminarTitleLayout,
      @NonNull AppCompatTextView seminarTotalCount, @NonNull AppCompatEditText seminarUrl,
      @NonNull ConstraintLayout seminiarRoomLayout, @NonNull AppCompatTextView smallCount,
      @NonNull AppCompatTextView smallRoom, @NonNull AppCompatTextView startDate,
      @NonNull ConstraintLayout startDateLayout, @NonNull ConstraintLayout startLayout,
      @NonNull AppCompatTextView startTime, @NonNull ConstraintLayout startTimeLayout,
      @NonNull AppCompatTextView title, @NonNull ConstraintLayout tooltip,
      @NonNull ConstraintLayout topLayout, @NonNull AppCompatTextView totalRoom,
      @NonNull AppCompatTextView txtDateTitle, @NonNull AppCompatTextView txtDayComment,
      @NonNull AppCompatTextView txtEndDate, @NonNull AppCompatTextView txtExplanationTitle,
      @NonNull AppCompatTextView txtOpenTitle, @NonNull AppCompatTextView txtRoomInfo,
      @NonNull AppCompatTextView txtRoomTitle,
      @NonNull AppCompatTextView txtSeminarExplanationError,
      @NonNull AppCompatTextView txtSeminarTitle, @NonNull AppCompatTextView txtSeminarTitleError,
      @NonNull AppCompatTextView txtStartDate, @NonNull AppCompatTextView txtTeacherTitle,
      @NonNull AppCompatTextView txtUrlTitle, @NonNull ConstraintLayout urlLayout,
      @NonNull View viewDateSeparate, @NonNull View viewDateSeparate01,
      @NonNull View viewDateSeparate02) {
    this.rootView = rootView;
    this.close = close;
    this.dateLayout = dateLayout;
    this.divide01 = divide01;
    this.divide02 = divide02;
    this.divide03 = divide03;
    this.divide10 = divide10;
    this.divide11 = divide11;
    this.editSeminarExplanation = editSeminarExplanation;
    this.editSeminarTeacher = editSeminarTeacher;
    this.editSeminarTitle = editSeminarTitle;
    this.endDate = endDate;
    this.endLayout = endLayout;
    this.endTime = endTime;
    this.endTimeLayout = endTimeLayout;
    this.indicator = indicator;
    this.largeRoom = largeRoom;
    this.largeRoomCount = largeRoomCount;
    this.layoutCoordinator = layoutCoordinator;
    this.listLayout = listLayout;
    this.middleCount = middleCount;
    this.middleRoom = middleRoom;
    this.openSwitch = openSwitch;
    this.roomLayout = roomLayout;
    this.roomListView = roomListView;
    this.roomSelectLayout = roomSelectLayout;
    this.seminarCapacityCount = seminarCapacityCount;
    this.seminarCapacityLayout = seminarCapacityLayout;
    this.seminarCountLayout = seminarCountLayout;
    this.seminarCreate = seminarCreate;
    this.seminarCreateInfoMessage01 = seminarCreateInfoMessage01;
    this.seminarCreateInfoMessage02 = seminarCreateInfoMessage02;
    this.seminarDateLayout = seminarDateLayout;
    this.seminarExplanationLayout = seminarExplanationLayout;
    this.seminarMinus = seminarMinus;
    this.seminarOpenLayout = seminarOpenLayout;
    this.seminarPlus = seminarPlus;
    this.seminarPlus01 = seminarPlus01;
    this.seminarPlus02 = seminarPlus02;
    this.seminarRoomCount = seminarRoomCount;
    this.seminarRoomCountLayout = seminarRoomCountLayout;
    this.seminarTeacherLayout = seminarTeacherLayout;
    this.seminarTitleLayout = seminarTitleLayout;
    this.seminarTotalCount = seminarTotalCount;
    this.seminarUrl = seminarUrl;
    this.seminiarRoomLayout = seminiarRoomLayout;
    this.smallCount = smallCount;
    this.smallRoom = smallRoom;
    this.startDate = startDate;
    this.startDateLayout = startDateLayout;
    this.startLayout = startLayout;
    this.startTime = startTime;
    this.startTimeLayout = startTimeLayout;
    this.title = title;
    this.tooltip = tooltip;
    this.topLayout = topLayout;
    this.totalRoom = totalRoom;
    this.txtDateTitle = txtDateTitle;
    this.txtDayComment = txtDayComment;
    this.txtEndDate = txtEndDate;
    this.txtExplanationTitle = txtExplanationTitle;
    this.txtOpenTitle = txtOpenTitle;
    this.txtRoomInfo = txtRoomInfo;
    this.txtRoomTitle = txtRoomTitle;
    this.txtSeminarExplanationError = txtSeminarExplanationError;
    this.txtSeminarTitle = txtSeminarTitle;
    this.txtSeminarTitleError = txtSeminarTitleError;
    this.txtStartDate = txtStartDate;
    this.txtTeacherTitle = txtTeacherTitle;
    this.txtUrlTitle = txtUrlTitle;
    this.urlLayout = urlLayout;
    this.viewDateSeparate = viewDateSeparate;
    this.viewDateSeparate01 = viewDateSeparate01;
    this.viewDateSeparate02 = viewDateSeparate02;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateSeminarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateSeminarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_seminar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateSeminarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close;
      AppCompatImageButton close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.date_layout;
      ConstraintLayout dateLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateLayout == null) {
        break missingId;
      }

      id = R.id.divide_01;
      View divide01 = ViewBindings.findChildViewById(rootView, id);
      if (divide01 == null) {
        break missingId;
      }

      id = R.id.divide_02;
      View divide02 = ViewBindings.findChildViewById(rootView, id);
      if (divide02 == null) {
        break missingId;
      }

      id = R.id.divide_03;
      View divide03 = ViewBindings.findChildViewById(rootView, id);
      if (divide03 == null) {
        break missingId;
      }

      id = R.id.divide_10;
      View divide10 = ViewBindings.findChildViewById(rootView, id);
      if (divide10 == null) {
        break missingId;
      }

      id = R.id.divide_11;
      View divide11 = ViewBindings.findChildViewById(rootView, id);
      if (divide11 == null) {
        break missingId;
      }

      id = R.id.edit_seminar_explanation;
      AppCompatEditText editSeminarExplanation = ViewBindings.findChildViewById(rootView, id);
      if (editSeminarExplanation == null) {
        break missingId;
      }

      id = R.id.edit_seminar_teacher;
      AppCompatTextView editSeminarTeacher = ViewBindings.findChildViewById(rootView, id);
      if (editSeminarTeacher == null) {
        break missingId;
      }

      id = R.id.edit_seminar_title;
      AppCompatEditText editSeminarTitle = ViewBindings.findChildViewById(rootView, id);
      if (editSeminarTitle == null) {
        break missingId;
      }

      id = R.id.end_date;
      AppCompatTextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.end_layout;
      ConstraintLayout endLayout = ViewBindings.findChildViewById(rootView, id);
      if (endLayout == null) {
        break missingId;
      }

      id = R.id.end_time;
      AppCompatTextView endTime = ViewBindings.findChildViewById(rootView, id);
      if (endTime == null) {
        break missingId;
      }

      id = R.id.end_time_layout;
      ConstraintLayout endTimeLayout = ViewBindings.findChildViewById(rootView, id);
      if (endTimeLayout == null) {
        break missingId;
      }

      id = R.id.indicator;
      CircleIndicator2 indicator = ViewBindings.findChildViewById(rootView, id);
      if (indicator == null) {
        break missingId;
      }

      id = R.id.large_room;
      AppCompatTextView largeRoom = ViewBindings.findChildViewById(rootView, id);
      if (largeRoom == null) {
        break missingId;
      }

      id = R.id.large_room_count;
      AppCompatTextView largeRoomCount = ViewBindings.findChildViewById(rootView, id);
      if (largeRoomCount == null) {
        break missingId;
      }

      id = R.id.layout_coordinator;
      CoordinatorLayout layoutCoordinator = ViewBindings.findChildViewById(rootView, id);
      if (layoutCoordinator == null) {
        break missingId;
      }

      id = R.id.list_layout;
      NestedScrollableHost listLayout = ViewBindings.findChildViewById(rootView, id);
      if (listLayout == null) {
        break missingId;
      }

      id = R.id.middle_count;
      AppCompatTextView middleCount = ViewBindings.findChildViewById(rootView, id);
      if (middleCount == null) {
        break missingId;
      }

      id = R.id.middle_room;
      AppCompatTextView middleRoom = ViewBindings.findChildViewById(rootView, id);
      if (middleRoom == null) {
        break missingId;
      }

      id = R.id.openSwitch;
      Switch openSwitch = ViewBindings.findChildViewById(rootView, id);
      if (openSwitch == null) {
        break missingId;
      }

      id = R.id.room_layout;
      ConstraintLayout roomLayout = ViewBindings.findChildViewById(rootView, id);
      if (roomLayout == null) {
        break missingId;
      }

      id = R.id.room_list_view;
      RecyclerView roomListView = ViewBindings.findChildViewById(rootView, id);
      if (roomListView == null) {
        break missingId;
      }

      id = R.id.room_select_layout;
      ConstraintLayout roomSelectLayout = ViewBindings.findChildViewById(rootView, id);
      if (roomSelectLayout == null) {
        break missingId;
      }

      id = R.id.seminar_capacity_count;
      AppCompatTextView seminarCapacityCount = ViewBindings.findChildViewById(rootView, id);
      if (seminarCapacityCount == null) {
        break missingId;
      }

      id = R.id.seminar_capacity_layout;
      ConstraintLayout seminarCapacityLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarCapacityLayout == null) {
        break missingId;
      }

      id = R.id.seminar_count_layout;
      ConstraintLayout seminarCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarCountLayout == null) {
        break missingId;
      }

      id = R.id.seminar_create;
      ConstraintLayout seminarCreate = ViewBindings.findChildViewById(rootView, id);
      if (seminarCreate == null) {
        break missingId;
      }

      id = R.id.seminar_create_info_message_01;
      AppCompatTextView seminarCreateInfoMessage01 = ViewBindings.findChildViewById(rootView, id);
      if (seminarCreateInfoMessage01 == null) {
        break missingId;
      }

      id = R.id.seminar_create_info_message_02;
      AppCompatTextView seminarCreateInfoMessage02 = ViewBindings.findChildViewById(rootView, id);
      if (seminarCreateInfoMessage02 == null) {
        break missingId;
      }

      id = R.id.seminar_date_layout;
      ConstraintLayout seminarDateLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarDateLayout == null) {
        break missingId;
      }

      id = R.id.seminar_explanation_layout;
      ConstraintLayout seminarExplanationLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarExplanationLayout == null) {
        break missingId;
      }

      id = R.id.seminar_minus;
      AppCompatImageView seminarMinus = ViewBindings.findChildViewById(rootView, id);
      if (seminarMinus == null) {
        break missingId;
      }

      id = R.id.seminar_open_layout;
      ConstraintLayout seminarOpenLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarOpenLayout == null) {
        break missingId;
      }

      id = R.id.seminar_plus;
      AppCompatImageView seminarPlus = ViewBindings.findChildViewById(rootView, id);
      if (seminarPlus == null) {
        break missingId;
      }

      id = R.id.seminar_plus_01;
      AppCompatImageView seminarPlus01 = ViewBindings.findChildViewById(rootView, id);
      if (seminarPlus01 == null) {
        break missingId;
      }

      id = R.id.seminar_plus_02;
      AppCompatImageView seminarPlus02 = ViewBindings.findChildViewById(rootView, id);
      if (seminarPlus02 == null) {
        break missingId;
      }

      id = R.id.seminar_room_count;
      AppCompatTextView seminarRoomCount = ViewBindings.findChildViewById(rootView, id);
      if (seminarRoomCount == null) {
        break missingId;
      }

      id = R.id.seminar_room_count_layout;
      ConstraintLayout seminarRoomCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarRoomCountLayout == null) {
        break missingId;
      }

      id = R.id.seminar_teacher_layout;
      ConstraintLayout seminarTeacherLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarTeacherLayout == null) {
        break missingId;
      }

      id = R.id.seminar_title_layout;
      ConstraintLayout seminarTitleLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminarTitleLayout == null) {
        break missingId;
      }

      id = R.id.seminar_total_count;
      AppCompatTextView seminarTotalCount = ViewBindings.findChildViewById(rootView, id);
      if (seminarTotalCount == null) {
        break missingId;
      }

      id = R.id.seminar_url;
      AppCompatEditText seminarUrl = ViewBindings.findChildViewById(rootView, id);
      if (seminarUrl == null) {
        break missingId;
      }

      id = R.id.seminiar_room_layout;
      ConstraintLayout seminiarRoomLayout = ViewBindings.findChildViewById(rootView, id);
      if (seminiarRoomLayout == null) {
        break missingId;
      }

      id = R.id.small_count;
      AppCompatTextView smallCount = ViewBindings.findChildViewById(rootView, id);
      if (smallCount == null) {
        break missingId;
      }

      id = R.id.small_room;
      AppCompatTextView smallRoom = ViewBindings.findChildViewById(rootView, id);
      if (smallRoom == null) {
        break missingId;
      }

      id = R.id.start_date;
      AppCompatTextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.start_date_layout;
      ConstraintLayout startDateLayout = ViewBindings.findChildViewById(rootView, id);
      if (startDateLayout == null) {
        break missingId;
      }

      id = R.id.start_layout;
      ConstraintLayout startLayout = ViewBindings.findChildViewById(rootView, id);
      if (startLayout == null) {
        break missingId;
      }

      id = R.id.start_time;
      AppCompatTextView startTime = ViewBindings.findChildViewById(rootView, id);
      if (startTime == null) {
        break missingId;
      }

      id = R.id.start_time_layout;
      ConstraintLayout startTimeLayout = ViewBindings.findChildViewById(rootView, id);
      if (startTimeLayout == null) {
        break missingId;
      }

      id = R.id.title;
      AppCompatTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tooltip;
      ConstraintLayout tooltip = ViewBindings.findChildViewById(rootView, id);
      if (tooltip == null) {
        break missingId;
      }

      id = R.id.topLayout;
      ConstraintLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      id = R.id.total_room;
      AppCompatTextView totalRoom = ViewBindings.findChildViewById(rootView, id);
      if (totalRoom == null) {
        break missingId;
      }

      id = R.id.txt_date_title;
      AppCompatTextView txtDateTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtDateTitle == null) {
        break missingId;
      }

      id = R.id.txt_day_comment;
      AppCompatTextView txtDayComment = ViewBindings.findChildViewById(rootView, id);
      if (txtDayComment == null) {
        break missingId;
      }

      id = R.id.txt_end_date;
      AppCompatTextView txtEndDate = ViewBindings.findChildViewById(rootView, id);
      if (txtEndDate == null) {
        break missingId;
      }

      id = R.id.txt_explanation_title;
      AppCompatTextView txtExplanationTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtExplanationTitle == null) {
        break missingId;
      }

      id = R.id.txt_open_title;
      AppCompatTextView txtOpenTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtOpenTitle == null) {
        break missingId;
      }

      id = R.id.txt_room_info;
      AppCompatTextView txtRoomInfo = ViewBindings.findChildViewById(rootView, id);
      if (txtRoomInfo == null) {
        break missingId;
      }

      id = R.id.txt_room_title;
      AppCompatTextView txtRoomTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtRoomTitle == null) {
        break missingId;
      }

      id = R.id.txt_seminar_explanation_error;
      AppCompatTextView txtSeminarExplanationError = ViewBindings.findChildViewById(rootView, id);
      if (txtSeminarExplanationError == null) {
        break missingId;
      }

      id = R.id.txt_seminar_title;
      AppCompatTextView txtSeminarTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtSeminarTitle == null) {
        break missingId;
      }

      id = R.id.txt_seminar_title_error;
      AppCompatTextView txtSeminarTitleError = ViewBindings.findChildViewById(rootView, id);
      if (txtSeminarTitleError == null) {
        break missingId;
      }

      id = R.id.txt_start_date;
      AppCompatTextView txtStartDate = ViewBindings.findChildViewById(rootView, id);
      if (txtStartDate == null) {
        break missingId;
      }

      id = R.id.txt_teacher_title;
      AppCompatTextView txtTeacherTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTeacherTitle == null) {
        break missingId;
      }

      id = R.id.txt_url_title;
      AppCompatTextView txtUrlTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtUrlTitle == null) {
        break missingId;
      }

      id = R.id.url_layout;
      ConstraintLayout urlLayout = ViewBindings.findChildViewById(rootView, id);
      if (urlLayout == null) {
        break missingId;
      }

      id = R.id.view_date_separate;
      View viewDateSeparate = ViewBindings.findChildViewById(rootView, id);
      if (viewDateSeparate == null) {
        break missingId;
      }

      id = R.id.view_date_separate_01;
      View viewDateSeparate01 = ViewBindings.findChildViewById(rootView, id);
      if (viewDateSeparate01 == null) {
        break missingId;
      }

      id = R.id.view_date_separate_02;
      View viewDateSeparate02 = ViewBindings.findChildViewById(rootView, id);
      if (viewDateSeparate02 == null) {
        break missingId;
      }

      return new ActivityCreateSeminarBinding((ConstraintLayout) rootView, close, dateLayout,
          divide01, divide02, divide03, divide10, divide11, editSeminarExplanation,
          editSeminarTeacher, editSeminarTitle, endDate, endLayout, endTime, endTimeLayout,
          indicator, largeRoom, largeRoomCount, layoutCoordinator, listLayout, middleCount,
          middleRoom, openSwitch, roomLayout, roomListView, roomSelectLayout, seminarCapacityCount,
          seminarCapacityLayout, seminarCountLayout, seminarCreate, seminarCreateInfoMessage01,
          seminarCreateInfoMessage02, seminarDateLayout, seminarExplanationLayout, seminarMinus,
          seminarOpenLayout, seminarPlus, seminarPlus01, seminarPlus02, seminarRoomCount,
          seminarRoomCountLayout, seminarTeacherLayout, seminarTitleLayout, seminarTotalCount,
          seminarUrl, seminiarRoomLayout, smallCount, smallRoom, startDate, startDateLayout,
          startLayout, startTime, startTimeLayout, title, tooltip, topLayout, totalRoom,
          txtDateTitle, txtDayComment, txtEndDate, txtExplanationTitle, txtOpenTitle, txtRoomInfo,
          txtRoomTitle, txtSeminarExplanationError, txtSeminarTitle, txtSeminarTitleError,
          txtStartDate, txtTeacherTitle, txtUrlTitle, urlLayout, viewDateSeparate,
          viewDateSeparate01, viewDateSeparate02);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
