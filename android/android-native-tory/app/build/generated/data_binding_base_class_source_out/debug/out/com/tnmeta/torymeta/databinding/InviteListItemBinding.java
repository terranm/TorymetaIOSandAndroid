// Generated by view binder compiler. Do not edit!
package com.tnmeta.torymeta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tnmeta.torymeta.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InviteListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addFriend;

  @NonNull
  public final AppCompatTextView inviteName;

  @NonNull
  public final CircleImageView profileImg;

  @NonNull
  public final ConstraintLayout profileLayout;

  private InviteListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addFriend, @NonNull AppCompatTextView inviteName,
      @NonNull CircleImageView profileImg, @NonNull ConstraintLayout profileLayout) {
    this.rootView = rootView;
    this.addFriend = addFriend;
    this.inviteName = inviteName;
    this.profileImg = profileImg;
    this.profileLayout = profileLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InviteListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InviteListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.invite_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InviteListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_friend;
      ConstraintLayout addFriend = ViewBindings.findChildViewById(rootView, id);
      if (addFriend == null) {
        break missingId;
      }

      id = R.id.invite_name;
      AppCompatTextView inviteName = ViewBindings.findChildViewById(rootView, id);
      if (inviteName == null) {
        break missingId;
      }

      id = R.id.profileImg;
      CircleImageView profileImg = ViewBindings.findChildViewById(rootView, id);
      if (profileImg == null) {
        break missingId;
      }

      id = R.id.profile_layout;
      ConstraintLayout profileLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileLayout == null) {
        break missingId;
      }

      return new InviteListItemBinding((ConstraintLayout) rootView, addFriend, inviteName,
          profileImg, profileLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
